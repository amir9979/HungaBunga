# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  issues:
    types: [opened]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    strategy:
        fail-fast: false
        matrix:
          #ind: [0, 1, 2, 3, 4] #, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48]
          ind: [0, 1, 4] #, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy 
          pip install scipy
          pip install joblib
          pip install scikit-learn 
          pip install tabulate   
          pip install pandas
          pip install pytest
          pip install tqdm

      # Runs a single command using the runners shell
      - name: execute
        run: python main.py ${{github.event.issue.title}}  ${{ matrix.ind }} > out.txt
        
      - name: add valids as a comment
        uses: actions/github-script@0.5.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs");
            const path = "out.txt";
            const text = fs.readFileSync(path).toString();
            github.issues.createComment({
              issue_number: ${{github.event.issue.number}},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: text
              })

  aggregate:
      runs-on: windows-latest
      needs: build
      
      steps:
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install numpy 
            pip install scipy
            pip install joblib
            pip install scikit-learn 
            pip install tabulate   
            pip install pandas
            pip install pytest
            pip install tqdm

        - name: add all valids to one file
          shell: python
          run: |
              import json
              import os
              import csv
              import http.client
              import pandas as pd
              with open(os.getenv('GITHUB_EVENT_PATH')) as json_file:
                            data = json.load(json_file)
                            issue_number = data['issue']['number']
              conn = http.client.HTTPSConnection("api.github.com")
              conn.request("GET","/repos/amir9979/bug_miner_runner/issues/{0}/comments".format(issue_number), "", {"User-Agent":"amir9979" , "Accept":"application/vnd.github.v3+json", "Authorization":"token ${{ secrets.GITHUB_TOKEN }}"})
              response = json.loads(conn.getresponse().read())
              classifiers = pd.DataFrame(list(map(lambda x: list(json.loads(x['body'])), response)))
              classifiers.to_csv("results.csv")

        - name: Upload results to release
          uses: svenstaro/upload-release-action@v1-release
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file: results.csv
            asset_name: ${{github.event.issue.title}}_${{github.event.issue.number}}.csv


        - name: Close Issue
          continue-on-error: true
          uses: peter-evans/close-issue@v1
          with:
            comment: |
              The issue you have reported seems to be resolved now.
              The extracted data can be found at releases.
