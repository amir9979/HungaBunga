# This is a basic workflow to help you get started with Actions

name: extract_all

# Controls when the action will run. 
on:

  # Allows you to run this workflow manually from the Actions tab

  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'  


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    steps:
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install numpy 
            pip install scipy
            pip install joblib
            pip install scikit-learn 
            pip install tabulate   
            pip install pandas
            pip install pytest
            pip install tqdm
        - name: add all valids to one file
          shell: python
          run: |
              import json
              import os
              import csv
              import http.client
              import pandas as pd
              all_data = []
              for issue_number in [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109]:
                conn = http.client.HTTPSConnection("api.github.com")
                conn.request("GET","/repos/amir9979/HungaBunga/issues/{0}/comments".format(issue_number), "", {"User-Agent":"amir9979" , "Accept":"application/vnd.github.v3+json", "Authorization":"token ${{ secrets.GITHUB_TOKEN }}"})
                response = list(map(lambda x: x['body'], json.loads(conn.getresponse().read())))
                print(response)
                for x in response:
                  try: 
                    all_data.append(json.loads(x))
                  except:
                    pass
              pd.DataFrame(all_data).to_csv("results.csv", index=False)
        - name: Upload results to release
          uses: svenstaro/upload-release-action@v1-release
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file: results.csv
            asset_name: classifiers.csv
            tag: classifiers.csv
